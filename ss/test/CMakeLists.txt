
if(MSVC)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP /WX /Zc:__cplusplus /Zc:ternary /permissive-")
endif()

message("============================================================"  )
message("IS APPLE                   : ${APPLE}"                         )
message("IS IOS                     : ${IOS}"                           )
message("IS ANDROID                 : ${ANDROID}"                       )
message("IS UNIX OR LINUX           : ${UNIX}"                          )
message("IS WIN32                   : ${WIN32}"                         )
message("IS MSVC                    : ${MSVC}"                          )
message("IS MSYS                    : ${MSYS}"                          )
message("IS MINGW                   : ${MINGW}"                         )
message("============================================================"  )
message("timestamp                  : ${timestamp}"                     )
message("CMAKE_SYSTEM_NAME          : ${CMAKE_SYSTEM_NAME}"             )
message("CURRENT_SYSTEM_NAME        : ${CURRENT_SYSTEM_NAME}"           )
message("CMAKE_CXX_STANDARD         : ${CMAKE_CXX_STANDARD}"            )
message("CMAKE_CXX_COMPILER_ID      : ${CMAKE_CXX_COMPILER_ID}"         )
message("CMAKE_CXX_COMPILER_VERSION : ${CMAKE_CXX_COMPILER_VERSION}"    )
message("CMAKE_CXX_COMPILER         : ${CMAKE_CXX_COMPILER}"            )
message("CMAKE_CXX_FLAGS            : ${CMAKE_CXX_FLAGS}"               )
message("============================================================\n")

macro(LOCAL_TEST_ONE name target cxx)
    add_test(NAME ${name} COMMAND ${name})
    add_executable(${name} ${target})
    set_property(TARGET ${name} PROPERTY CXX_STANDARD ${cxx})
    target_link_libraries(${name} PUBLIC ss ${ARGN})
endmacro()

macro(LOCAL_TEST name target)
    LOCAL_TEST_ONE(${name}_cxx11 ${target} 11 ${ARGN})
    LOCAL_TEST_ONE(${name}_cxx14 ${target} 14 ${ARGN})
    LOCAL_TEST_ONE(${name}_cxx17 ${target} 17 ${ARGN})
    LOCAL_TEST_ONE(${name}_cxx20 ${target} 20 ${ARGN})
endmacro()

macro(SS_TEST name target)
    if(SS_TEST_MATRIX)
        add_test(NAME ${name} COMMAND ${name})
        add_executable(${name} ${target})
        target_link_libraries(${name} PUBLIC ss ${ARGN})
    else()
        LOCAL_TEST(${name} ${target} ${ARGN})
    endif()
endmacro()

include_directories(${CMAKE_CURRENT_SOURCE_DIR})

SS_TEST(optional_test       optional_test.cc)
SS_TEST(type_traits_test    type_traits_test.cc)
SS_TEST(utility_test        utility_test.cc)
